import * as AllProjectExports from './imports';

class Seatbelt {
  constructor() {
    this.plugins = {};
    this.pluginConfigs = {};

    if (AllProjectExports && typeof AllProjectExports === 'object') {
      Object.keys(AllProjectExports).forEach(variable => {
        let newItem;
        if (AllProjectExports[variable] && AllProjectExports[variable].prototype) {
          newItem = new AllProjectExports[variable]();
        } else {
          newItem = AllProjectExports[variable];
        }
        if (typeof newItem === 'object') {
          if (newItem.__seatbeltPluginType === 'server') {
            this.server = newItem;
          } else if (newItem.__seatbeltPluginType === 'config') {
            this.pluginConfigs[newItem.__seatbeltPluginName] = newItem;
          } else if (newItem.__seatbeltPluginType === 'plugin') {
            if (!this.plugins[newItem.__seatbeltPluginName]) {
              this.plugins[newItem.__seatbeltPluginName] = [];
            }
            this.plugins[newItem.__seatbeltPluginName].push(newItem);
          }
        }
      });
    }

    if (!this.server) {
      throw new Error('failed to initialize server, did you forget to export one?')
    }

    Object.keys(this.pluginConfigs).forEach(name => {
      if (this.pluginConfigs[name].config) {
        this.pluginConfigs[name].config(this);
      }
    })

    this.server.config(this);
  }
}

const seatbelt = new Seatbelt();

seatbelt.server.init();
